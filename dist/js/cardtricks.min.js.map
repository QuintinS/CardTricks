{"version":3,"sources":["base.js"],"names":["$","window","document","undefined","widget","storage","defaults","options","deal","dealOptions","mode","cardsToAnimate","cardDelay","cardMultiplier","animOptions","velocity","ease","duration","messy","messyMult","rotation","_create","this","element","addClass","_trigger","event","_init","extend","dealClass","velocityClass","easeClass","_animate","stack","find","attr","type","fidget","cards","each","index","card","origin","_messy","_rotation","noise","css","transform","transform-origin","Math","random","_messyAmplitude","Deferred","resolve","_setOption","key","value","Widget","prototype","apply","arguments","destroy","call","jQuery"],"mappings":"CAYA,SAAAA,EAAAC,EAAAC,EAAAC,GAEAH,EAAAI,OAAA,yBAEAC,WAIAC,YAIAC,SACAC,KAAA,SACAC,aACAC,KAAA,WACAC,eAAA,MACAC,UAAA,IACAC,eAAA,GAEAC,aACAC,SAAA,OACAC,KAAA,UACAC,SAAA,GACAC,OAAA,EACAC,UAAA,EACAC,SAAA,KAMAC,QAAA,WASAC,KAAAhB,SAAAgB,KAAAf,QACAe,KAAAf,QAAAgB,QAAAD,KAAAC,QAEAD,KAAAC,QAAAC,SAAA,oBAEAF,KAAAG,SAAA,6BAAAC,QAIAC,MAAA,WAEAL,KAAAf,QAAAP,EAAA4B,OAAAN,KAAAhB,SAAAgB,KAAAf,QAEA,IAAAsB,GACAC,EACAC,CAEA,QAAAT,KAAAf,QAAAC,MACA,IAAA,QACAqB,EAAA,wBACA,MACA,KAAA,UACAA,EAAA,0BACA,MACA,KAAA,MACAA,EAAA,sBACA,MACA,SACAA,EAAA,0BAIA,OAAAP,KAAAf,QAAAQ,UACA,IAAA,UACAe,EAAA,+BACAR,KAAAjB,QAAAY,SAAA,EACA,MACA,KAAA,OACAa,EAAA,4BACAR,KAAAjB,QAAAY,SAAA,GACA,MACA,KAAA,SACAa,EAAA,8BACAR,KAAAjB,QAAAY,SAAA,EACA,MACA,KAAA,OACAa,EAAA,4BACAR,KAAAjB,QAAAY,SAAA,GACA,MACA,KAAA,UACAa,EAAA,+BACAR,KAAAjB,QAAAY,SAAA,CACA,MACA,SACAa,EAAA,4BAIA,OAAAR,KAAAf,QAAAS,MACA,IAAA,YACAe,EAAA,sBACA,MACA,KAAA,SACAA,EAAA,mBACA,MACA,KAAA,UAGA,QACAA,EAAA,qBAIAT,KAAAC,QACAC,SAAAM,EAAA,IAAAC,EAAA,IAAAF,GAEAP,KAAAG,SAAA,2BAAAC,OAEAJ,KAAAU,YAIAC,MAAA,SAAAP,GAIAJ,KAAAf,QAAAgB,QAAAW,KAAA,2BAAAC,KAAA,QAAA,IAEAb,KAAAG,SAAA,4BAAAC,IAKAM,SAAA,SAAAI,EAAA7B,GAgCA,QAAA8B,KAEAC,EAAAC,KAAA,SAAAC,EAAAC,GAEA,GAAArB,GACAsB,CAEAC,IACAvB,EAAAwB,EAAAC,IACAH,EAAA,GAAA,GAAAG,IAAA,OAAA,GAAAA,IAAA,KAGAH,EAAA,SAGA1C,EAAAyC,GAAAK,KACAC,UAAA,UAAA3B,EAAA,OACA4B,mBAAAN,MA6BA,QAAAG,KACA,OAAAI,KAAAC,SAAA,IAAAC,EA3EA,GAKAR,GALAL,EAAAhB,KAAAC,QAAAW,KAAA,2BAGAU,EAAAtB,KAAAf,QAAAO,YAAAM,SAGA+B,EAAA7B,KAAAf,QAAAO,YAAAK,SAEAnB,GAAAoD,WAAAC,SAQA,QANA,gBAAA/B,MAAAf,QAAAO,cACA6B,GAAA,IAAArB,KAAAf,QAAAO,YAAAI,OAKAI,KAAAf,QAAAC,MACA,IAAA,SACA6B,GACA,MACA,KAAA,SAgCA,WAEAC,EAAAC,KAAA,SAAAC,EAAAC,GAEA,GAAArB,EAEAuB,KACAvB,EAAAwB,EAAAC,KAGA7C,EAAAyC,GAAAK,KACAC,UAAA,UAAA3B,EAAA,OACA4B,mBAAA,GAAA,GAAAH,IAAA,OAAA,GAAAA,IAAA,UA1CA,MACA,SACAR,MA0DAiB,WAAA,SAAAC,EAAAC,GAYAxD,EAAAyD,OAAAC,UAAAJ,WAAAK,MAAArC,KAAAsC,YAOAC,QAAA,WAKA7D,EAAAyD,OAAAC,UAAAG,QAAAC,KAAAxC,UAQAyC,OAAA9D,OAAAC","file":"cardtricks.min.js","sourcesContent":["/**\n *  CARD TRICKS\n * *\n *  Play the cards like a master with this simple library.\n * *\n *  @author      Quintin Schnehage\n *  @copyright   Copyright (c) 2016\n *  @license     Reserved\n *  @since       Version 1.0\n *\n */\n\n;(function ( $, window, document, undefined ) {\n\n    $.widget( \"cardtricks.cardtricks\" , {\n\n        storage: {\n\n        },\n\n        defaults: {\n\n        },\n\n        options: {\n            deal: \"fidget\", // \"scatter\" | \"spreadLeftRight\" | \"spreadRightLeft\",\n            dealOptions: {\n              mode: \"sequence\", // \"sequence\" | \"all\" - whether to animate cards one at a time or all at once.\n              cardsToAnimate: \"all\", // \"all\" | integer - How many cards to animate.\n              cardDelay: 250, // The delay between one card being animated and nother, in ms\n              cardMultiplier: 1, // Multiplies the cards by this amount for the animation. Integer.\n            },\n            animOptions: {\n              velocity: \"fast\",\n              ease: \"easeOut\",\n              duration: 0.5,\n              messy: true, // true | false - Adds a bit of randomness for a natural feel.\n              messyMult: 1, // Number - adjust randomness\n              rotation: 10,\n            },\n        },\n\n        //Setup widget (eg. element creation, apply theming\n        // , bind events etc.)\n        _create: function () {\n\n            // _create will automatically run the first time\n            // this widget is called. Put the initial widget\n            // setup code here, then you can access the element\n            // on which the widget was called via this.element.\n            // The options defined above can be accessed\n            // via this.options this.element.addStuff();\n\n            this.defaults = this.options;\n            this.options.element = this.element;\n\n            this.element.addClass(\"cardtricks-cards\");\n\n            this._trigger('cardtricks.create.complete', event);\n\n        },\n\n        _init: function(){\n\n          this.options = $.extend(this.defaults, this.options);\n\n          var dealClass;\n          var velocityClass;\n          var easeClass;\n\n          switch(this.options.deal){\n            case \"flick\":\n              dealClass = \"cardtricks-deal--flick\";\n              break;\n            case \"scatter\":\n              dealClass = \"cardtricks-deal--scatter\";\n              break;\n            case \"fan\":\n              dealClass = \"cardtricks-deal--fan\";\n              break;\n            default:\n              dealClass = \"cardtricks-deal--fidget\";\n              break;\n          }\n\n          switch(this.options.velocity){\n            case \"fastest\":\n              velocityClass = \"cardtricks-velocity--fastest\";\n              this.storage.duration = 0.1;\n              break;\n            case \"fast\":\n              velocityClass = \"cardtricks-velocity--fast\";\n              this.storage.duration = 0.25;\n              break;\n            case \"medium\":\n              velocityClass = \"cardtricks-velocity--medium\";\n              this.storage.duration = 0.5;\n              break;\n            case \"slow\":\n              velocityClass = \"cardtricks-velocity--slow\";\n              this.storage.duration = 0.75;\n              break;\n            case \"slowest\":\n              velocityClass = \"cardtricks-velocity--slowest\";\n              this.storage.duration = 1;\n              break;\n            default:\n              velocityClass = \"cardtricks-velocity--fast\";\n              break;\n          }\n\n          switch(this.options.ease){\n            case \"easeInOut\":\n              easeClass = \"cardtricks-easeInOut\";\n              break;\n            case \"easeIn\":\n              easeClass = \"cardtricks-easeIn\";\n              break;\n            case \"easeOut\":\n              easeClass = \"cardtricks-easeOut\";\n              break;\n            default:\n              easeClass = \"cardtricks-easeOut\";\n              break;\n          }\n\n          this.element\n            .addClass(velocityClass + \" \" + easeClass + \" \" + dealClass);\n\n          this._trigger('cardtricks.init.complete', event);\n\n          this._animate();\n\n        },\n\n        stack: function ( event ) {\n\n            // Return all the cards to their original position.\n\n            this.options.element.find(\".cardtricks-cards__card\").attr(\"style\", \"\");\n\n            this._trigger('cardtricks.stack.complete', event);\n        },\n\n        /*  ===== Private Methods ===== */\n\n        _animate: function (type, options) {\n\n          // Animate the cards.\n\n          var cards = this.element.find(\".cardtricks-cards__card\");\n\n\n          var _rotation = this.options.animOptions.rotation;\n          var _origin = \"center\";\n          var _messy;\n          var _messyAmplitude = this.options.animOptions.messyMult;\n\n          var queue = $.Deferred().resolve();\n\n          if (typeof this.options.animOptions === \"object\") {\n            _messy = this.options.animOptions.messy === true ? true : false;\n          }\n\n          // Loop through all cards, animating them.\n\n          switch(this.options.deal) {\n            case \"fidget\":\n              fidget();\n              break;\n            case \"flick\":\n              flick();\n              break;\n            default:\n              fidget();\n              break;\n          }\n\n          function fidget(){\n\n            cards.each(function(index, card){\n\n              var rotation;\n              var origin;\n\n              if (_messy) {\n                rotation = _rotation * noise();\n                origin = 50 + 50 * noise() + \"% \" + 50 + 50 * noise() + \"%\";\n              }\n              else {\n                origin = \"center\";\n              }\n\n              $(card).css({\n                \"transform\": \"rotate(\" + rotation + \"deg)\",\n                \"transform-origin\": origin\n              });\n\n            });\n\n          }\n\n          function flick(){\n\n            cards.each(function(index, card){\n\n              var rotation;\n\n              if (_messy) {\n                rotation = _rotation * noise();\n              }\n\n              $(card).css({\n                \"transform\": \"rotate(\" + rotation + \"deg)\",\n                \"transform-origin\": 50 + 50 * noise() + \"% \" + 50 + 50 * noise() + \"%\"\n              });\n\n            });\n\n          }\n\n\n\n          // A little noise function for injecting some randomness.\n          function noise(){\n            return (Math.random() - 0.5) * _messyAmplitude;\n          }\n\n        },\n\n        // Respond to any changes the user makes to the\n        // option method\n        _setOption: function ( key, value ) {\n            switch (key) {\n            case \"someValue\":\n                //this.options.someValue = doSomethingWith( value );\n                break;\n            default:\n                //this.options[ key ] = value;\n                break;\n            }\n\n            // For UI 1.8, _setOption must be manually invoked\n            // from the base widget\n            $.Widget.prototype._setOption.apply( this, arguments );\n            // For UI 1.9 the _super method can be used instead\n            // this._super( \"_setOption\", key, value );\n        },\n\n        // Destroy an instantiated plugin and clean up\n        // modifications the widget has made to the DOM\n        destroy: function () {\n\n            // this.element.removeStuff();\n            // For UI 1.8, destroy must be invoked from the\n            // base widget\n            $.Widget.prototype.destroy.call(this);\n            // For UI 1.9, define _destroy instead and don't\n            // worry about\n            // calling the base widget\n        },\n\n    });\n\n})( jQuery, window, document );\n"]}